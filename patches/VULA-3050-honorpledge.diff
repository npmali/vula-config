diff --git a/assignment/bundles/resources/honorpledge.properties b/assignment/bundles/resources/honorpledge.properties
new file mode 100644
index 00000000000..387d0df2872
--- /dev/null
+++ b/assignment/bundles/resources/honorpledge.properties
@@ -0,0 +1,40 @@
+#gen.addhonple     = Add plagiarism declaration
+#youarenot18 = You have to check the plagiarism declaration before submission.
+#gen.honple        = Plagiarism declaration:
+
+# UCT - University of Cape Town
+uct.gen.honple2       = Plagiarism declaration: <ul><li>I know that plagiarism is wrong. Plagiarism is to use another's work and pretend that it is one's own.<li>I have used the required convention for citation and referencing. Each contribution to and quotation in this assignment from the work(s) of other people has been attributed, and has been cited and referenced.<li>This assignment is my own work.<li>I have not allowed, and will not allow, anyone to copy my work with the intention of passing it off as his or her own work.<li>I acknowledge that copying someone else's assignment or essay, or part of it, is wrong, and declare that this is my own work.</ul>
+uct.gen.addhonple     = Add plagiarism declaration
+uct.youarenot18 = You have to check the plagiarism declaration before submission.
+uct.gen.honple        = Plagiarism declaration:
+
+
+# ox - Oxford University
+# Note: the value below is (clearly) specific to Oxford University.
+ox.gen.honple2       = Declaration of authorship - I confirm the following:<br />\
+1. I have read and understood the University's disciplinary regulations concerning conduct in examinations \
+  and, in particular, the regulations on plagiarism (The University Student Handbook Section 8.8;<br />\
+  available at <a href="https://www.ox.ac.uk/students/academic/student-handbook" target="_blank"> \
+  https://www.ox.ac.uk/students/academic/student-handbook</a>).<br />\
+2. I have read and understood the Education Committee's information and guidance on academic good practice \
+  and plagiarism at <a href="https://www.ox.ac.uk/students/academic/guidance/skills?wssl=1" target="_blank">\
+  https://www.ox.ac.uk/students/academic/guidance/skills?wssl=1</a>.<br />\
+3. The [thesis/dissertation/extended essay/assignment/project/other submitted work] I am submitting is entirely my own work except where otherwise indicated.<br />\
+4. It has not been submitted, either partially or in full, either for this Honour School or qualification or for another Honour School \
+  or qualification of this University (except where the Special Regulations for the subject permit this), or for a qualification at any other institution.<br />\
+5. I have clearly indicated the presence of all material I have quoted from other sources, including any diagrams, charts, tables or graphs.<br />\
+6. I have clearly indicated the presence of all paraphrased material with appropriate references.<br />\
+7. I have acknowledged appropriately any assistance I have received in addition to that provided by my [tutor/supervisor/adviser].<br />\
+8. I have not copied from the work of any other candidate.<br />\
+9. I have not used the services of any agency providing specimen, model or ghostwritten work in the preparation of this \
+  thesis/dissertation/extended essay/assignment/project/other submitted work. (See also section 2.4 of Statute XI on \
+  University Discipline under which members of the University are prohibited from providing material of this nature for \
+  candidates in examinations at this University or elsewhere: <a href="http://www.admin.ox.ac.uk/statutes/352-051a.shtml" target="_blank">\
+  http://www.admin.ox.ac.uk/statutes/352-051a.shtml</a>).<br />\
+10. I agree to retain an electronic copy of this work until the publication of my final examination result, except where submission in hand-written format is permitted.<br />\
+11. I agree to make any such electronic copy available to the examiners should it be necessary to confirm my word count or to check for plagiarism.
+
+ox.gen.honple2val=You need to check the declaration of authorship. Click Edit to do so.
+ox.gen.addhonple=Add declaration of authorship
+ox.gen.honple=Declaration of authorship
+ox.youarenot18=You have to check the declaration of authorship before submission.
diff --git a/assignment/bundles/resources/honorpledge_fr.properties b/assignment/bundles/resources/honorpledge_fr.properties
new file mode 100644
index 00000000000..be1e1f158b2
--- /dev/null
+++ b/assignment/bundles/resources/honorpledge_fr.properties
@@ -0,0 +1,2 @@
+#UCT
+uct.gen.honple2       = D\u00e9claration de plagiat:<ul><li>Je sais que le plagiat est faux. Le plagiat est d'utiliser le travail d'autrui et de pr\u00e9tendre qu'il est propre.<li>J'ai utilis\u00e9 la convention requise pour la citation et le r\u00e9f\u00e9rencement. Chaque contribution et citation dans cette t\u00e2che provenant des travaux d'autres personnes a \u00e9t\u00e9 attribu\u00e9e et a \u00e9t\u00e9 cit\u00e9e et r\u00e9f\u00e9renc\u00e9e.<li>Cette t\u00e2¢che est mon propre travail.<li>Je n'ai pas autoris\u00e9 et je ne permet pas \u00e2  quiconque de copier mon travail dans le but de le transf\u00e9rer comme son propre travail.<li>Je reconnais que la copie de la mission ou de l'essai de quelqu'un d'autre, ou une partie de celui-ci, est fausse, et d\u00e9clare que c'est mon propre travail.</ul>
diff --git a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
index 37a1438afce..d693d809702 100644
--- a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
+++ b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
@@ -1531,7 +1531,7 @@ private String build_student_view_submission_context(VelocityPortlet portlet, Co
         context.put("value_submission_text", state.getAttribute(VIEW_SUBMISSION_TEXT));
         context.put("name_submission_honor_pledge_yes", VIEW_SUBMISSION_HONOR_PLEDGE_YES);
         context.put("value_submission_honor_pledge_yes", state.getAttribute(VIEW_SUBMISSION_HONOR_PLEDGE_YES));
-        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", rb.getString("gen.honple2")));
+        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.honorPledge2()));
         context.put("attachments", stripInvisibleAttachments(state.getAttribute(ATTACHMENTS)));
         context.put("new_attachments", newAttachments);
         context.put("userDirectoryService", userDirectoryService);
@@ -1947,7 +1947,7 @@ protected String build_student_preview_submission_context(VelocityPortlet portle
 
         context.put("text", state.getAttribute(PREVIEW_SUBMISSION_TEXT));
         context.put("honor_pledge_yes", state.getAttribute(PREVIEW_SUBMISSION_HONOR_PLEDGE_YES));
-        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", rb.getString("gen.honple2")));
+        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.honorPledge2()));
         context.put("attachments", stripInvisibleAttachments(state.getAttribute(PREVIEW_SUBMISSION_ATTACHMENTS)));
         context.put("contentTypeImageService", contentTypeImageService);
 
@@ -2318,7 +2318,8 @@ protected String build_instructor_new_edit_assignment_context(VelocityPortlet po
 
         context.put("group_submissions_enabled", serverConfigurationService.getBoolean("assignment.group.submission.enabled", true));
         context.put("visible_date_enabled", serverConfigurationService.getBoolean("assignment.visible.date.enabled", false));
-
+        context.put("add_honor_pledge", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.addHonorPledge()));
+        
         String sortedBy = (String) state.getAttribute(SORTED_BY);
         String sortedAsc = (String) state.getAttribute(SORTED_ASC);
         context.put("sortedBy", sortedBy);
@@ -2969,7 +2970,7 @@ private String build_instructor_preview_assignment_context(VelocityPortlet portl
         context.put("value_opendate_notification_low", AssignmentConstants.ASSIGNMENT_OPENDATE_NOTIFICATION_LOW);
         context.put("value_opendate_notification_high", AssignmentConstants.ASSIGNMENT_OPENDATE_NOTIFICATION_HIGH);
         context.put("value_CheckAddHonorPledge", state.getAttribute(NEW_ASSIGNMENT_CHECK_ADD_HONOR_PLEDGE));
-        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", rb.getString("gen.honple2")));
+        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.honorPledge2()));
 
         // SAK-17606
         context.put("value_CheckAnonymousGrading", state.getAttribute(NEW_ASSIGNMENT_CHECK_ANONYMOUS_GRADING));
@@ -4243,8 +4244,9 @@ private String build_instructor_view_assignment_context(VelocityPortlet portlet,
         context.put("hideAssignmentFlag", state.getAttribute(VIEW_ASSIGNMENT_HIDE_ASSIGNMENT_FLAG));
         context.put("hideStudentViewFlag", state.getAttribute(VIEW_ASSIGNMENT_HIDE_STUDENT_VIEW_FLAG));
         context.put("contentTypeImageService", contentTypeImageService);
-        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", rb.getString("gen.honple2")));
-
+        context.put("honor_pledge_text", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.honorPledge2()));
+        context.put("honor_pledge", serverConfigurationService.getString("assignment.honor.pledge", HonorPledge.honorPledge()));
+        
         String template = (String) getContext(data).get("template");
         return template + TEMPLATE_INSTRUCTOR_VIEW_ASSIGNMENT;
 
@@ -5912,10 +5914,11 @@ private void post_save_submission(RunData data, boolean post) {
             }
 
 
+
             if (state.getAttribute(STATE_MESSAGE) == null) {
                 if (a.getHonorPledge()) {
                     if (!Boolean.valueOf(honorPledgeYes)) {
-                        addAlert(state, rb.getString("youarenot18"));
+                        addAlert(state, HonorPledge.youAreNot());
                     }
                     state.setAttribute(VIEW_SUBMISSION_HONOR_PLEDGE_YES, honorPledgeYes);
                 }
diff --git a/assignment/tool/src/java/org/sakaiproject/assignment/tool/HonorPledge.java b/assignment/tool/src/java/org/sakaiproject/assignment/tool/HonorPledge.java
new file mode 100644
index 00000000000..ff7ad6cde29
--- /dev/null
+++ b/assignment/tool/src/java/org/sakaiproject/assignment/tool/HonorPledge.java
@@ -0,0 +1,100 @@
+/**
+ * Copyright (c) 2003-2017 The Apereo Foundation
+ *
+ * Licensed under the Educational Community License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *             http://opensource.org/licenses/ecl2
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.sakaiproject.assignment.tool;
+
+import org.sakaiproject.component.api.ServerConfigurationService;
+import org.sakaiproject.component.cover.ComponentManager;
+import org.sakaiproject.util.ResourceLoader;
+
+import lombok.extern.slf4j.Slf4j;
+
+@Slf4j
+public class HonorPledge {
+	private static ResourceLoader rb = new ResourceLoader("honorpledge");
+	private static ResourceLoader rb2 = new ResourceLoader("assignment");
+	private static ServerConfigurationService serverConfigurationService = ComponentManager.get(ServerConfigurationService.class);
+	/**
+	 * @return
+	 */
+	public static String honorPledge2() {
+		String ui = getInstitution();
+		String hp2 = null; 
+		String honorpledge = ui + ".gen.honple2";
+		hp2 = rb.getString(honorpledge);
+
+		if (("[missing key (mre): honorpledge " + honorpledge + "]").equals(hp2)) {
+			log.debug("gen.honple2 null!");
+			hp2 = rb2.getString("gen.honple2");
+		}
+		
+		return hp2;
+	}
+
+	private static String getInstitution() {
+		
+		String ui = serverConfigurationService.getString("assignment.institution", "sakai");
+		return ui;
+	}
+	
+	/**
+	 * @return
+	 */
+	public static String honorPledge() {
+		String ui = getInstitution();
+		String hp2 = null; 
+		String honorpledge = ui + ".gen.honple";
+		hp2 = rb.getString(honorpledge);
+
+		if (("[missing key (mre): honorpledge " + honorpledge + "]").equals(hp2)) {
+			log.debug("gen.honple2 null!");
+			hp2 = rb2.getString("gen.honple");
+		}
+		
+		return hp2;
+	}
+	
+	/**
+	 * @return
+	 */
+	public static String addHonorPledge() {
+		
+		String ui = getInstitution();
+		String hp2 = null; 
+		String honorpledge = ui + ".gen.addhonple";
+		hp2 = rb.getString(honorpledge);
+
+		if (("[missing key (mre): honorpledge " + honorpledge + "]").equals(hp2)) {
+			log.debug("gen.honple2 null!");
+			hp2 = rb2.getString("gen.addhonple");
+		}
+		
+		return hp2;
+	}
+	
+	public static String youAreNot() {
+		String ui = getInstitution();
+		String hp2 = null; 
+		String honorpledge = ui + ".youarenot18";
+		hp2 = rb.getString(honorpledge);
+
+		if (("[missing key (mre): honorpledge " + honorpledge + "]").equals(hp2)) {
+			log.debug("gen.honple2 null!");
+			hp2 = rb2.getString("youarenot18");
+		}
+		
+		return hp2;
+	}
+}
diff --git a/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm b/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
index dc20a709a91..22277db7e60 100644
--- a/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
+++ b/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_new_edit_assignment.vm
@@ -158,7 +158,7 @@
                        checked="checked"
 					#end
 				/>
-				$tlang.getString("gen.addhonple")
+				$add_honor_pledge
 			</label>
 		</div>
 
diff --git a/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_view_assignment.vm b/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_view_assignment.vm
index 4b07409078b..e332900ef7d 100644
--- a/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_view_assignment.vm
+++ b/assignment/tool/src/webapp/vm/assignment/chef_assignments_instructor_view_assignment.vm
@@ -195,7 +195,7 @@
 			</tr>
 			<tr> 
 				<th>
-					$tlang.getString("gen.honple")
+					$honor_pledge
 				</th>
 				<td> 
 					#if ($assignment.HonorPledge)
diff --git a/assignment/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm b/assignment/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm
index 348107226ea..67f8f6fddd3 100644
--- a/assignment/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm
+++ b/assignment/tool/src/webapp/vm/assignment/chef_assignments_student_view_submission.vm
@@ -1071,6 +1071,7 @@ $(document).ready(function(){
 					#end
 				#end
 				#if ($!assignment.HonorPledge)
+					<span class="messageInformation">
 					<p class="checkbox highlightPanel">
 						<label for="$name_submission_honor_pledge_yes">
 							#if (!$!canSubmit)
@@ -1092,6 +1093,7 @@ $(document).ready(function(){
 						<br />
 						$tlang.getString("gen.youmus")
 					</p>
+					</span>
 				#end
 				<div id="submitPanel"
 					#if ($!deleted.equalsIgnoreCase("true") || !$!canSubmit)
