diff --git a/assignment/api/src/java/org/sakaiproject/assignment/api/AssignmentPeerAssessmentService.java b/assignment/api/src/java/org/sakaiproject/assignment/api/AssignmentPeerAssessmentService.java
index 5ec504d9aaf..78bc964aa81 100644
--- a/assignment/api/src/java/org/sakaiproject/assignment/api/AssignmentPeerAssessmentService.java
+++ b/assignment/api/src/java/org/sakaiproject/assignment/api/AssignmentPeerAssessmentService.java
@@ -40,13 +40,7 @@
 
     public List<PeerAssessmentItem> getPeerAssessmentItems(Collection<String> submissionsIds, Integer scaledFactor);
 
-    /**
-     * returns true if the score was updated and saved
-     *
-     * @param submissionId
-     * @return
-     */
-    public boolean updateScore(String submissionId);
+    public boolean updateScore(String submissionId, String assessorId);
 
     public List<PeerAssessmentAttachment> getPeerAssessmentAttachments(String submissionId, String assessorUserId);
 
diff --git a/assignment/api/src/java/org/sakaiproject/assignment/api/model/Assignment.java b/assignment/api/src/java/org/sakaiproject/assignment/api/model/Assignment.java
index b953b6a10db..7b33233ba97 100644
--- a/assignment/api/src/java/org/sakaiproject/assignment/api/model/Assignment.java
+++ b/assignment/api/src/java/org/sakaiproject/assignment/api/model/Assignment.java
@@ -232,7 +232,8 @@
     @Column(name = "PEER_ASSESSMENT_NUMBER_REVIEW")
     private Integer peerAssessmentNumberReviews;
 
-    @Column(name = "PEER_ASSESSMENT_INSTRUCTIONS", length = 8000)
+    @Lob
+    @Column(name = "PEER_ASSESSMENT_INSTRUCTIONS", length = 65535)
     private String peerAssessmentInstructions;
 
     @Column(name = "CONTENT_REVIEW")
diff --git a/assignment/api/src/java/org/sakaiproject/assignment/persistence/AssignmentRepository.java b/assignment/api/src/java/org/sakaiproject/assignment/api/persistence/AssignmentRepository.java
similarity index 97%
rename from assignment/api/src/java/org/sakaiproject/assignment/persistence/AssignmentRepository.java
rename to assignment/api/src/java/org/sakaiproject/assignment/api/persistence/AssignmentRepository.java
index 1df3a20ab43..75432aa4c21 100644
--- a/assignment/api/src/java/org/sakaiproject/assignment/persistence/AssignmentRepository.java
+++ b/assignment/api/src/java/org/sakaiproject/assignment/api/persistence/AssignmentRepository.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.sakaiproject.assignment.persistence;
+package org.sakaiproject.assignment.api.persistence;
 
 import java.util.List;
 import java.util.Map;
diff --git a/assignment/api/src/java/org/sakaiproject/assignment/taggable/api/AssignmentActivityProducer.java b/assignment/api/src/java/org/sakaiproject/assignment/api/taggable/AssignmentActivityProducer.java
similarity index 97%
rename from assignment/api/src/java/org/sakaiproject/assignment/taggable/api/AssignmentActivityProducer.java
rename to assignment/api/src/java/org/sakaiproject/assignment/api/taggable/AssignmentActivityProducer.java
index d01d5f08543..bd0c6cff751 100644
--- a/assignment/api/src/java/org/sakaiproject/assignment/taggable/api/AssignmentActivityProducer.java
+++ b/assignment/api/src/java/org/sakaiproject/assignment/api/taggable/AssignmentActivityProducer.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.taggable.api;
+package org.sakaiproject.assignment.api.taggable;
 
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.model.AssignmentSubmission;
diff --git a/assignment/assignment-bundles/resources/assignment_fa_IR.properties b/assignment/bundles/resources/assignment_fa_IR.properties
similarity index 100%
rename from assignment/assignment-bundles/resources/assignment_fa_IR.properties
rename to assignment/bundles/resources/assignment_fa_IR.properties
diff --git a/assignment/assignment-bundles/resources/permissions_fa_IR.properties b/assignment/bundles/resources/permissions_fa_IR.properties
similarity index 100%
rename from assignment/assignment-bundles/resources/permissions_fa_IR.properties
rename to assignment/bundles/resources/permissions_fa_IR.properties
diff --git a/assignment/impl/pom.xml b/assignment/impl/pom.xml
index 11cefc5c7e4..f8e8ca93708 100644
--- a/assignment/impl/pom.xml
+++ b/assignment/impl/pom.xml
@@ -155,6 +155,10 @@
             <groupId>com.fasterxml.jackson.datatype</groupId>
             <artifactId>jackson-datatype-jdk8</artifactId>
         </dependency>
+        <dependency>
+            <groupId>com.fasterxml.woodstox</groupId>
+            <artifactId>woodstox-core</artifactId>
+        </dependency>
         <dependency>
             <groupId>org.sakaiproject.scheduler</groupId>
             <artifactId>scheduler-api</artifactId>
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentPeerAssessmentServiceImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentPeerAssessmentServiceImpl.java
index 147cfb9b7db..d1d1174d2de 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentPeerAssessmentServiceImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentPeerAssessmentServiceImpl.java
@@ -411,7 +411,7 @@ public void removePeerAttachment(PeerAssessmentAttachment peerAssessmentAttachme
         getHibernateTemplate().flush();
     }
 
-    public boolean updateScore(String submissionId) {
+    public boolean updateScore(String submissionId, String assessorId) {
         boolean saved = false;
         SecurityAdvisor sa = new SecurityAdvisor() {
             public SecurityAdvice isAllowed(String userId, String function, String reference) {
@@ -433,9 +433,10 @@ public SecurityAdvice isAllowed(String userId, String function, String reference
             AssignmentSubmission submission = assignmentService.getSubmission(submissionId);
             //only override grades that have never been graded or was last graded by this service
             //this prevents this service from overriding instructor set grades, which take precedent.
-            if (submission != null &&
-                    (submission.getGraded() == false || submission.getGradedBy() == null || "".equals(submission.getGradedBy().trim())
-                            || AssignmentPeerAssessmentService.class.getName().equals(submission.getGradedBy().trim()))) {
+            if (submission != null
+                    && (!submission.getGraded()
+                        || StringUtils.isBlank(submission.getGradedBy())
+                        || StringUtils.equals(assessorId, submission.getGradedBy()))) {
                 List<PeerAssessmentItem> items = getPeerAssessmentItems(submissionId, submission.getAssignment().getScaleFactor());
                 if (items != null) {
                     //scores are stored w/o decimal points, so a score of 3.4 is stored as 34 in the DB
@@ -472,7 +473,7 @@ public SecurityAdvice isAllowed(String userId, String function, String reference
                     if (changed) {
                         submission.setGrade(totleScoreStr);
                         submission.setGraded(true);
-                        submission.setGradedBy(AssignmentPeerAssessmentService.class.getName());
+                        submission.setGradedBy(assessorId);
                         submission.setGradeReleased(false);
                         assignmentService.updateSubmission(submission);
                         saved = true;
@@ -483,9 +484,7 @@ public SecurityAdvice isAllowed(String userId, String function, String reference
             log.error(e.getMessage(), e);
         } finally {
             // remove advisor
-            if (sa != null) {
-                securityService.popAdvisor(sa);
-            }
+            securityService.popAdvisor(sa);
         }
         return saved;
     }
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentServiceImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentServiceImpl.java
index 34992b12f38..d478af09e82 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentServiceImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/AssignmentServiceImpl.java
@@ -35,7 +35,6 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
-import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -79,8 +78,8 @@
 import org.sakaiproject.assignment.impl.sort.AnonymousSubmissionComparator;
 import org.sakaiproject.assignment.impl.sort.AssignmentSubmissionComparator;
 import org.sakaiproject.assignment.impl.sort.UserComparator;
-import org.sakaiproject.assignment.persistence.AssignmentRepository;
-import org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer;
+import org.sakaiproject.assignment.api.persistence.AssignmentRepository;
+import org.sakaiproject.assignment.api.taggable.AssignmentActivityProducer;
 import org.sakaiproject.authz.api.AuthzGroup;
 import org.sakaiproject.authz.api.AuthzGroupService;
 import org.sakaiproject.authz.api.AuthzPermissionException;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/Assignment12ConversionJob.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/Assignment12ConversionJob.java
new file mode 100644
index 00000000000..a72c2f74396
--- /dev/null
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/Assignment12ConversionJob.java
@@ -0,0 +1,31 @@
+package org.sakaiproject.assignment.impl.conversion;
+
+import lombok.Setter;
+import lombok.extern.slf4j.Slf4j;
+import org.quartz.DisallowConcurrentExecution;
+import org.quartz.Job;
+import org.quartz.JobExecutionContext;
+import org.quartz.JobExecutionException;
+import org.sakaiproject.assignment.api.conversion.AssignmentConversionService;
+
+@Slf4j
+@DisallowConcurrentExecution
+public class Assignment12ConversionJob implements Job {
+
+    @Setter
+    private AssignmentConversionService assignmentConversionService;
+
+    @Override
+    public void execute(JobExecutionContext context) throws JobExecutionException {
+        log.info("<===== Assignment Conversion Job start =====>");
+
+        // never run as a recovery
+        if (context.isRecovering()) {
+            log.warn("<===== Assignment Conversion Job doesn't support recovery, job will terminate... =====>");
+        } else {
+            assignmentConversionService.runConversion();
+        }
+
+        log.info("<===== Assignment Conversion Job end =====>");
+    }
+}
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentConversionServiceImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentConversionServiceImpl.java
similarity index 91%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentConversionServiceImpl.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentConversionServiceImpl.java
index b0ec4385bab..9d47bbfefcf 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentConversionServiceImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentConversionServiceImpl.java
@@ -1,4 +1,4 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
@@ -49,7 +49,7 @@
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.model.AssignmentSubmission;
 import org.sakaiproject.assignment.api.model.AssignmentSubmissionSubmitter;
-import org.sakaiproject.assignment.persistence.AssignmentRepository;
+import org.sakaiproject.assignment.api.persistence.AssignmentRepository;
 import org.sakaiproject.component.api.ServerConfigurationService;
 import org.sakaiproject.entity.api.ResourceProperties;
 import org.sakaiproject.hibernate.AssignableUUIDGenerator;
@@ -69,8 +69,7 @@
         // DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMddHHmmssSSS");
         dateTimeFormatter = new DateTimeFormatterBuilder().appendPattern("yyyyMMddHHmmss").appendValue(ChronoField.MILLI_OF_SECOND, 3).toFormatter();
 
-        SimpleModule stringModule = new SimpleModule();
-        stringModule.addDeserializer(String.class, new StdDeserializer<String>(String.class) {
+        SimpleModule module = new SimpleModule().addDeserializer(String.class, new StdDeserializer<String>(String.class) {
             @Override
             public String deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException {
                 String str = StringDeserializer.instance.deserialize(p, ctxt);
@@ -81,15 +80,15 @@ public String deserialize(JsonParser p, DeserializationContext ctxt) throws IOEx
 
         xmlMapper = new XmlMapper();
         xmlMapper.registerModule(new Jdk8Module());
-        xmlMapper.registerModule(stringModule);
+        xmlMapper.registerModule(module);
     }
 
     @Setter private AssignmentRepository assignmentRepository;
     @Setter private AssignmentDataProvider dataProvider;
     @Setter private ServerConfigurationService serverConfigurationService;
 
-    private int assignmentsMigrated;
-    private int submissionsMigrated;
+    private int assignmentsConverted;
+    private int submissionsConverted;
     private int submissionsFailed;
     private int assignmentsFailed;
     private int assignmentsTotal;
@@ -111,7 +110,7 @@ public Object serializeFromXml(String xml, Class clazz) {
             try {
                 return xmlMapper.readValue(xml, clazz);
             } catch (IOException ioe) {
-                log.warn("deserialization failed for xml: {}\n{}", xml, ioe.getMessage());
+                log.warn("deserialization failed for xml: {}\n{}", xml.substring(0, Math.min(xml.length(), 200)), ioe.getMessage());
             }
         }
         return null;
@@ -119,7 +118,7 @@ public Object serializeFromXml(String xml, Class clazz) {
 
     @Override
     public void runConversion() {
-        assignmentsMigrated = submissionsMigrated = submissionsFailed = assignmentsFailed = assignmentsTotal = progress = 0;
+        assignmentsConverted = submissionsConverted = submissionsFailed = assignmentsFailed = assignmentsTotal = progress = 0;
 
         String configValue = "org.sakaiproject.assignment.api.model.Assignment,org.sakaiproject.assignment.api.model.AssignmentSubmission";
         String currentValue = serverConfigurationService.getConfig(AssignableUUIDGenerator.HIBERNATE_ASSIGNABLE_ID_CLASSES, null);
@@ -139,14 +138,18 @@ public void runConversion() {
         convertAssignments.removeAll(postAssignments);
         assignmentsTotal = convertAssignments.size();
 
-        log.info("<===== Assignments pre 12 {} and post 12 {} to migrate {} =====>", preAssignments.size(), postAssignments.size(), assignmentsTotal);
+        log.info("<===== Assignments pre 12 [{}] and post 12 [{}] to convert {} =====>", preAssignments.size(), postAssignments.size(), assignmentsTotal);
 
-        for (String assignment : convertAssignments) {
-            convert(assignment);
-            int percent = new Double(((assignmentsMigrated + assignmentsFailed) / (double) assignmentsTotal) * 100).intValue();
+        for (String assignmentId : convertAssignments) {
+            try {
+                convert(assignmentId);
+            } catch (Exception e) {
+                log.warn("Assignment conversion exception for {}", assignmentId, e);
+            }
+            int percent = new Double(((assignmentsConverted + assignmentsFailed) / (double) assignmentsTotal) * 100).intValue();
             if (progress != percent) {
                 progress = percent;
-                log.info("<===== Assignments migration completed {}%", percent);
+                log.info("<===== Assignments conversion completed {}% =====>", percent);
             }
         }
 
@@ -156,10 +159,10 @@ public void runConversion() {
                 AssignmentConversionServiceImpl.class.getName());
         serverConfigurationService.registerConfigItem(configItem);
 
-        log.info("<===== Assignments migrated {} =====>", assignmentsMigrated);
-        log.info("<===== Submissions migrated {} =====>", submissionsMigrated);
-        log.info("<===== Assignments that failed to be migrated {} =====>", assignmentsFailed);
-        log.info("<===== Submissions that failed to be migrated {} =====>", submissionsFailed);
+        log.info("<===== Assignments converted {} =====>", assignmentsConverted);
+        log.info("<===== Submissions converted {} =====>", submissionsConverted);
+        log.info("<===== Assignments that failed to be converted {} =====>", assignmentsFailed);
+        log.info("<===== Submissions that failed to be converted {} =====>", submissionsFailed);
     }
 
     private String adjustXmlForGroups(String xml) {
@@ -240,8 +243,8 @@ private void convert(String assignmentId) {
                             // so we just need to merge and flush so that every assignment is persisted
                             try {
                                 assignmentRepository.merge(assignment);
-                                assignmentsMigrated++;
-                                submissionsMigrated += assignment.getSubmissions().size();
+                                assignmentsConverted++;
+                                submissionsConverted += assignment.getSubmissions().size();
                             } catch (HibernateException he) {
                                 log.warn("could not persist assignment {}, {}", assignmentId, he.getMessage());
                                 assignmentsFailed++;
@@ -252,11 +255,11 @@ private void convert(String assignmentId) {
                             assignmentsFailed++;
                         }
                     } else {
-                        log.warn("deserialization of content {} failed skipping assignment {}", contentId, assignmentId);
+                        log.warn("deserialization of assignment content {} failed skipping assignment {}", contentId, assignmentId);
                         assignmentsFailed++;
                     }
                 } else {
-                    log.warn("content {} xml is invalid skipping assignment {}", contentId, assignmentId);
+                    log.warn("assignment content {} xml is invalid skipping assignment {}", contentId, assignmentId);
                     assignmentsFailed++;
                 }
             } else {
@@ -276,6 +279,12 @@ private Assignment assignmentReintegration(O11Assignment assignment, O11Assignme
         String[] contentAnyKeys = contentAny.keySet().toArray(new String[contentAny.size()]);
         Predicate<String> attachmentFilter = Pattern.compile("attachment\\d+").asPredicate();
 
+        // if an assignment context is missing we ignore the assignment
+        if (StringUtils.isBlank(assignment.getContext())) {
+            log.warn("Assignment {} does not have a CONTEXT", assignment.getId());
+            return null;
+        }
+
         Assignment a = new Assignment();
         a.setAllowAttachments(content.getAllowattach());
         a.setAllowPeerAssessment(assignment.getAllowpeerassessment());
@@ -388,7 +397,12 @@ private AssignmentSubmission submissionReintegration(Assignment assignment, O11S
         s.setFeedbackText(decodeBase64(submission.getFeedbacktextHtml()));
         s.setGrade(submission.getScaled_grade());
         s.setGraded(submission.getGraded());
-        s.setGradedBy(submission.getGradedBy());
+        if (StringUtils.contains(submission.getGradedBy(), "AssignmentPeerAssessmentService")) {
+            // set peer assessment back to null as the assessor id is not recorded
+            s.setGradedBy(null);
+        } else {
+            s.setGradedBy(submission.getGradedBy());
+        }
         s.setGradeReleased(submission.getGradereleased());
         s.setHiddenDueDate(submission.getHideduedate());
         s.setHonorPledge(submission.getPledgeflag());
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentDataProvider11.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentDataProvider11.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentDataProvider11.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentDataProvider11.java
index d82e3f7d978..33b45d29ce2 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentDataProvider11.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentDataProvider11.java
@@ -1,4 +1,4 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.util.Collections;
 import java.util.List;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentSubmissionAccess.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentSubmissionAccess.java
similarity index 78%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentSubmissionAccess.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentSubmissionAccess.java
index a1d74b03d56..555b2cb3d39 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/AssignmentSubmissionAccess.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/AssignmentSubmissionAccess.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.io.Reader;
 import java.io.StringReader;
@@ -37,8 +37,6 @@
 import org.apache.commons.lang.StringUtils;
 
 import org.sakaiproject.assignment.api.AssignmentConstants;
-import org.sakaiproject.assignment.impl.conversion.api.SerializableSubmissionAccess;
-import org.sakaiproject.assignment.impl.conversion.impl.SAXSerializablePropertiesAccess;
 import org.sakaiproject.entity.api.serialize.EntityParseException;
 import org.sakaiproject.entity.api.serialize.SerializableEntity;
 import org.sakaiproject.util.Xml;
@@ -479,7 +477,7 @@ else if (StringUtils.trimToNull(attributes.getValue("feedbacktext-formatted")) !
 	}
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getId()
+	 * @see SerializableSubmissionAccess#getId()
 	 */
 	public String getId() 
 	{
@@ -488,7 +486,7 @@ public String getId()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setId(java.lang.String)
+	 * @see SerializableSubmissionAccess#setId(java.lang.String)
 	 */
 	public void setId(String id) 
 	{
@@ -497,7 +495,7 @@ public void setId(String id)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getGrade()
+	 * @see SerializableSubmissionAccess#getGrade()
 	 */
 	public String getGrade() 
 	{
@@ -506,7 +504,7 @@ public String getGrade()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setGrade(java.lang.String)
+	 * @see SerializableSubmissionAccess#setGrade(java.lang.String)
 	 */
 	public void setGrade(String grade) 
 	{
@@ -515,7 +513,7 @@ public void setGrade(String grade)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getAssignment()
+	 * @see SerializableSubmissionAccess#getAssignment()
 	 */
 	public String getAssignment() 
 	{
@@ -524,7 +522,7 @@ public String getAssignment()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setAssignment(java.lang.String)
+	 * @see SerializableSubmissionAccess#setAssignment(java.lang.String)
 	 */
 	public void setAssignment(String assignment) 
 	{
@@ -533,7 +531,7 @@ public void setAssignment(String assignment)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getContext()
+	 * @see SerializableSubmissionAccess#getContext()
 	 */
 	public String getContext() 
 	{
@@ -542,7 +540,7 @@ public String getContext()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setContext(java.lang.String)
+	 * @see SerializableSubmissionAccess#setContext(java.lang.String)
 	 */
 	public void setContext(String context) 
 	{
@@ -551,7 +549,7 @@ public void setContext(String context)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getDatereturned()
+	 * @see SerializableSubmissionAccess#getDatereturned()
 	 */
 	public String getDatereturned() 
 	{
@@ -560,7 +558,7 @@ public String getDatereturned()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setDatereturned(java.lang.String)
+	 * @see SerializableSubmissionAccess#setDatereturned(java.lang.String)
 	 */
 	public void setDatereturned(String datereturned) 
 	{
@@ -569,7 +567,7 @@ public void setDatereturned(String datereturned)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getFeedbackcomment()
+	 * @see SerializableSubmissionAccess#getFeedbackcomment()
 	 */
 	public String getFeedbackcomment() 
 	{
@@ -578,7 +576,7 @@ public String getFeedbackcomment()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setFeedbackcomment(java.lang.String)
+	 * @see SerializableSubmissionAccess#setFeedbackcomment(java.lang.String)
 	 */
 	public void setFeedbackcomment(String feedbackcomment) 
 	{
@@ -587,7 +585,7 @@ public void setFeedbackcomment(String feedbackcomment)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getFeedbackcomment_html()
+	 * @see SerializableSubmissionAccess#getFeedbackcomment_html()
 	 */
 	public String getFeedbackcomment_html() 
 	{
@@ -596,7 +594,7 @@ public String getFeedbackcomment_html()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setFeedbackcomment_html(java.lang.String)
+	 * @see SerializableSubmissionAccess#setFeedbackcomment_html(java.lang.String)
 	 */
 	public void setFeedbackcomment_html(String feedbackcomment_html) 
 	{
@@ -605,7 +603,7 @@ public void setFeedbackcomment_html(String feedbackcomment_html)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getFeedbacktext()
+	 * @see SerializableSubmissionAccess#getFeedbacktext()
 	 */
 	public String getFeedbacktext() 
 	{
@@ -614,7 +612,7 @@ public String getFeedbacktext()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setFeedbacktext(java.lang.String)
+	 * @see SerializableSubmissionAccess#setFeedbacktext(java.lang.String)
 	 */
 	public void setFeedbacktext(String feedbacktext) 
 	{
@@ -623,7 +621,7 @@ public void setFeedbacktext(String feedbacktext)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getFeedbacktext_html()
+	 * @see SerializableSubmissionAccess#getFeedbacktext_html()
 	 */
 	public String getFeedbacktext_html() 
 	{
@@ -632,7 +630,7 @@ public String getFeedbacktext_html()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setFeedbacktext_html(java.lang.String)
+	 * @see SerializableSubmissionAccess#setFeedbacktext_html(java.lang.String)
 	 */
 	public void setFeedbacktext_html(String feedbacktext_html) 
 	{
@@ -641,7 +639,7 @@ public void setFeedbacktext_html(String feedbacktext_html)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getGraded()
+	 * @see SerializableSubmissionAccess#getGraded()
 	 */
 	public String getGraded() 
 	{
@@ -653,7 +651,7 @@ public String getGradedBy(){
 	}
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setGraded(java.lang.String)
+	 * @see SerializableSubmissionAccess#setGraded(java.lang.String)
 	 */
 	public void setGraded(String graded) 
 	{
@@ -665,7 +663,7 @@ public void setGradedBy(String gradedBy){
 	}
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getGradereleased()
+	 * @see SerializableSubmissionAccess#getGradereleased()
 	 */
 	public String getGradereleased() 
 	{
@@ -674,7 +672,7 @@ public String getGradereleased()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setGradereleased(java.lang.String)
+	 * @see SerializableSubmissionAccess#setGradereleased(java.lang.String)
 	 */
 	public void setGradereleased(String gradereleased) 
 	{
@@ -683,7 +681,7 @@ public void setGradereleased(String gradereleased)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getLastmod()
+	 * @see SerializableSubmissionAccess#getLastmod()
 	 */
 	public String getLastmod() 
 	{
@@ -692,7 +690,7 @@ public String getLastmod()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setLastmod(java.lang.String)
+	 * @see SerializableSubmissionAccess#setLastmod(java.lang.String)
 	 */
 	public void setLastmod(String lastmod) 
 	{
@@ -701,7 +699,7 @@ public void setLastmod(String lastmod)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getPledgeflag()
+	 * @see SerializableSubmissionAccess#getPledgeflag()
 	 */
 	public String getPledgeflag() 
 	{
@@ -710,7 +708,7 @@ public String getPledgeflag()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setPledgeflag(java.lang.String)
+	 * @see SerializableSubmissionAccess#setPledgeflag(java.lang.String)
 	 */
 	public void setPledgeflag(String pledgeflag) 
 	{
@@ -719,7 +717,7 @@ public void setPledgeflag(String pledgeflag)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getReturned()
+	 * @see SerializableSubmissionAccess#getReturned()
 	 */
 	public String getReturned() 
 	{
@@ -728,7 +726,7 @@ public String getReturned()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setReturned(java.lang.String)
+	 * @see SerializableSubmissionAccess#setReturned(java.lang.String)
 	 */
 	public void setReturned(String returned) 
 	{
@@ -737,7 +735,7 @@ public void setReturned(String returned)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getReviewReport()
+	 * @see SerializableSubmissionAccess#getReviewReport()
 	 */
 	public String getReviewReport() 
 	{
@@ -746,7 +744,7 @@ public String getReviewReport()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setReviewReport(java.lang.String)
+	 * @see SerializableSubmissionAccess#setReviewReport(java.lang.String)
 	 */
 	public void setReviewReport(String reviewReport) 
 	{
@@ -755,7 +753,7 @@ public void setReviewReport(String reviewReport)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getReviewScore()
+	 * @see SerializableSubmissionAccess#getReviewScore()
 	 */
 	public String getReviewScore() 
 	{
@@ -764,7 +762,7 @@ public String getReviewScore()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setReviewScore(java.lang.String)
+	 * @see SerializableSubmissionAccess#setReviewScore(java.lang.String)
 	 */
 	public void setReviewScore(String reviewScore) 
 	{
@@ -773,7 +771,7 @@ public void setReviewScore(String reviewScore)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getReviewStatus()
+	 * @see SerializableSubmissionAccess#getReviewStatus()
 	 */
 	public String getReviewStatus() 
 	{
@@ -782,7 +780,7 @@ public String getReviewStatus()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setReviewStatus(java.lang.String)
+	 * @see SerializableSubmissionAccess#setReviewStatus(java.lang.String)
 	 */
 	public void setReviewStatus(String reviewStatus) 
 	{
@@ -790,7 +788,7 @@ public void setReviewStatus(String reviewStatus)
 	}
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getSubmitted()
+	 * @see SerializableSubmissionAccess#getSubmitted()
 	 */
 	public String getSubmitted() 
 	{
@@ -802,7 +800,7 @@ public String getSubmitterId() {
         }
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setSubmitted(java.lang.String)
+	 * @see SerializableSubmissionAccess#setSubmitted(java.lang.String)
 	 */
 	public void setSubmitted(String submitted) 
 	{
@@ -815,7 +813,7 @@ public void setSubmitterId(String id) {
         }
         
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getSubmittedattachments()
+	 * @see SerializableSubmissionAccess#getSubmittedattachments()
 	 */
 	public List<String> getSubmittedattachments() 
 	{
@@ -824,7 +822,7 @@ public void setSubmitterId(String id) {
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setSubmittedattachments(java.util.List)
+	 * @see SerializableSubmissionAccess#setSubmittedattachments(java.util.List)
 	 */
 	public void setSubmittedattachments(List<String> submittedattachments) 
 	{
@@ -833,7 +831,7 @@ public void setSubmittedattachments(List<String> submittedattachments)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getFeedbackattachments()
+	 * @see SerializableSubmissionAccess#getFeedbackattachments()
 	 */
 	public List<String> getFeedbackattachments() 
 	{
@@ -842,7 +840,7 @@ public void setSubmittedattachments(List<String> submittedattachments)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setFeedbackattachments(java.util.List)
+	 * @see SerializableSubmissionAccess#setFeedbackattachments(java.util.List)
 	 */
 	public void setFeedbackattachments(List<String> feedbackattachments) 
 	{
@@ -851,7 +849,7 @@ public void setFeedbackattachments(List<String> feedbackattachments)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getDatesubmitted()
+	 * @see SerializableSubmissionAccess#getDatesubmitted()
 	 */
 	public String getDatesubmitted() 
 	{
@@ -860,7 +858,7 @@ public String getDatesubmitted()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setDatesubmitted(java.lang.String)
+	 * @see SerializableSubmissionAccess#setDatesubmitted(java.lang.String)
 	 */
 	public void setDatesubmitted(String datesubmitted) 
 	{
@@ -869,7 +867,7 @@ public void setDatesubmitted(String datesubmitted)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getSubmittedtext()
+	 * @see SerializableSubmissionAccess#getSubmittedtext()
 	 */
 	public String getSubmittedtext() 
 	{
@@ -878,7 +876,7 @@ public String getSubmittedtext()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setSubmittedtext(java.lang.String)
+	 * @see SerializableSubmissionAccess#setSubmittedtext(java.lang.String)
 	 */
 	public void setSubmittedtext(String submittedtext) 
 	{
@@ -887,7 +885,7 @@ public void setSubmittedtext(String submittedtext)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getSubmittedtext_html()
+	 * @see SerializableSubmissionAccess#getSubmittedtext_html()
 	 */
 	public String getSubmittedtext_html() 
 	{
@@ -896,7 +894,7 @@ public String getSubmittedtext_html()
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setSubmittedtext_html(java.lang.String)
+	 * @see SerializableSubmissionAccess#setSubmittedtext_html(java.lang.String)
 	 */
 	public void setSubmittedtext_html(String submittedtext_html) 
 	{
@@ -905,7 +903,7 @@ public void setSubmittedtext_html(String submittedtext_html)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#getSubmitters()
+	 * @see SerializableSubmissionAccess#getSubmitters()
 	 */
 	public List<String> getSubmitters() 
 	{
@@ -917,7 +915,7 @@ public void setSubmittedtext_html(String submittedtext_html)
 
 
 	/* (non-Javadoc)
-	 * @see org.sakaiproject.assignment.impl.conversion.impl.SerializableSubmissionAccess#setSubmitters(java.util.List)
+	 * @see SerializableSubmissionAccess#setSubmitters(java.util.List)
 	 */
 	public void setSubmitters(List<String> submitters) 
 	{
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/CombineDuplicateSubmissionsConversionHandler.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/CombineDuplicateSubmissionsConversionHandler.java
similarity index 99%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/CombineDuplicateSubmissionsConversionHandler.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/CombineDuplicateSubmissionsConversionHandler.java
index 2e69621d3b4..c188cf1fbda 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/CombineDuplicateSubmissionsConversionHandler.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/CombineDuplicateSubmissionsConversionHandler.java
@@ -20,7 +20,7 @@
  **********************************************************************************/
 
 
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.io.StringReader;
 import java.io.UnsupportedEncodingException;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Assignment.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Assignment.java
similarity index 86%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Assignment.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Assignment.java
index b321171d591..3ad0d2ce83b 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Assignment.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Assignment.java
@@ -1,5 +1,6 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -58,7 +59,7 @@
     private String visibledate;
     // List of authzGroups
     // <group authzGroup="/site/BVCC_942A_9301/group/b9ff34b8-1465-4ba8-b532-ed8e097b88fa"/>
-    private List<O11Group> groups;
+    private List<O11Group> groups = new ArrayList<>();
     // List of name=value where value is enc is the encoding used in value
     // <property enc="BASE64" name="XXX" value="YYY"/>
     // <property enc="BASE64" name="CHEF:creator" value="ZTJjNzk1ZTYtY2RmYS00OGZmLTgxZGEtNWE0ZTg0YzI5YWVh"/>
@@ -77,7 +78,7 @@
     // <property enc="BASE64" name="assignment_releasegrade_notification_value" value="YXNzaWdubWVudF9yZWxlYXNlZ3JhZGVfbm90aWZpY2F0aW9uX2VhY2g="/>
     // <property enc="BASE64" name="assignment_instructor_notifications_value" value="YXNzaWdubWVudF9pbnN0cnVjdG9yX25vdGlmaWNhdGlvbnNfZWFjaA=="/>
     // <property enc="BASE64" name="new_assignment_check_anonymous_grading" value=""/>
-    private List<O11Property> properties;
+    private List<O11Property> properties = new ArrayList<>();
 
     /**
      * Used to catch unmapped values<br/>
@@ -92,4 +93,17 @@ public void setAny(String key, Object value) {
         any.put(key, value);
     }
 
+    // prevents nulling the member groups, this is not need in jackson 2.9
+    public void setGroups(List<O11Group> groups) {
+        if (groups != null) {
+            this.groups = groups;
+        }
+    }
+
+    // prevents nulling the member properties, this is not need in jackson 2.9
+    public void setProperties(List<O11Property> properties) {
+        if (properties != null) {
+            this.properties = properties;
+        }
+    }
 }
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11AssignmentContent.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11AssignmentContent.java
similarity index 88%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11AssignmentContent.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11AssignmentContent.java
index 2337ac338ad..19308498f0b 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11AssignmentContent.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11AssignmentContent.java
@@ -1,5 +1,6 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -81,7 +82,7 @@
      * List of name=value where value is enc is the encoding used in value<br/>
      * <property enc="BASE64" name="XXX" value="YYY"/>
      */
-    private List<O11Property> properties;
+    private List<O11Property> properties = new ArrayList<>();
 
     /**
      * Used to catch unmapped values<br/>
@@ -95,4 +96,11 @@
     public void setAny(String key, Object value) {
         any.put(key, value);
     }
+
+    // prevents nulling the member properties, this is not need in jackson 2.9
+    public void setProperties(List<O11Property> properties) {
+        if (properties != null) {
+            this.properties = properties;
+        }
+    }
 }
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Group.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Group.java
similarity index 59%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Group.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Group.java
index 72ab2891fc5..bd4bf7cdd00 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Group.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Group.java
@@ -1,4 +1,4 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import lombok.Data;
 
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Property.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Property.java
similarity index 88%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Property.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Property.java
index 38aa367443b..2c4fc461ef3 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Property.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Property.java
@@ -1,6 +1,4 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
-
-import java.util.Base64;
+package org.sakaiproject.assignment.impl.conversion;
 
 import lombok.Data;
 import lombok.EqualsAndHashCode;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Submission.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Submission.java
similarity index 87%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Submission.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Submission.java
index b47fb698887..11a3ac0a53b 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/O11Submission.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/O11Submission.java
@@ -1,5 +1,6 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -67,7 +68,7 @@
 
     // List of name=value where value is enc is the encoding used in value
     // <property enc="BASE64" name="XXX" value="YYY"/>
-    private List<O11Property> properties;
+    private List<O11Property> properties = new ArrayList<>();
 
     /**
      * Used to catch unmapped values<br/>
@@ -83,4 +84,11 @@
     public void setAny(String key, Object value) {
         any.put(key, value);
     }
+
+    // prevents nulling the member properties, this is not need in jackson 2.9
+    public void setProperties(List<O11Property> properties) {
+        if (properties != null) {
+            this.properties = properties;
+        }
+    }
 }
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/README.md b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/README.md
new file mode 100644
index 00000000000..52f54be1b11
--- /dev/null
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/README.md
@@ -0,0 +1,78 @@
+# Assignments Conversion
+
+This document describes the Assignments conversion for Sakai 12
+
+## Assignment Conversion Job
+
+The assignments conversion job for Sakai 12 is a quartz job. Which means after one has completed the normal conversion
+from Sakai 11 to Sakai 12 there will be new assignment tables specifically:
+```text
+ASN_ASSIGNMENT
+ASN_ASSIGNMENT_ATTACHMENTS
+ASN_ASSIGNMENT_GROUPS
+ASN_ASSIGNMENT_PROPERTIES
+
+ASN_SUBMISSION
+ASN_SUBMISSION_ATTACHMENTS
+ASN_SUBMISSION_FEEDBACK_ATTACH
+ASN_SUBMISSION_PROPERTIES
+ASN_SUBMISSION_SUBMITTER
+```
+
+These new tables will be empty until the Assignments Conversion Job is run (_typically using the Job Scheduler_).
+
+The following old assignment tables are used to perform the conversion:
+```text
+ASSIGNMENT_ASSIGNMENT
+ASSIGNMENT_CONTENT
+ASSIGNMENT_SUBMISSION
+``` 
+These tables are never altered by the migration they are simply used as input. Once the conversion is complete these
+tables can be discarded, however I would suggest waiting until you are satisified that all data was converted successfully.
+
+#### Running the Conversion
+The Assignment Conversion Job can be run as many times as needed it will not reprocess assignments that have already been
+converted. Every time it is run it queries the old tables for a list of assignments to convert and then checks that with
+new assignment table and removes any assignments that are already converted.
+
+#### If you see a message about a failed assignment:
+
+`AssignmentConversionServiceImpl.convert assignment content a8252d19-69f5-425e-804b-f32e81ff559e xml is invalid skipping assignment 8a252d19-69f5-425e-804b-f32e81ff559e`
+
+The assignment and all its submissions will be completely skipped, it will be attemnpted the next time the job is run.
+One should look at the assignments that could not be converted and address the issue in the old tables and rerun the
+conversion job.
+
+#### If you see a message about a failed submission:
+
+`AssignmentConversionServiceImpl.convert deserialization of a submission failed in assignment 6cdf38ec-1542-4050-9b14-28a441f548de skipping submission`
+
+The assignment was still converted as well as any other submissions that didn't fail it is up to you locate the failed
+submission and correct it manually. One possible way of correcting it would be to fix the submissions xml in the original
+table and remove the assignment and all its submissions from the new table and then rerun the assignment conversion.
+The assigment will be selected for conversion and attempted again.    
+
+## Configuration
+The following are the configuration options which can be adjusted as one needs. The values shown are the defaults.
+
+- content.cleaner.filter.utf8 = true
+  - whether surrogate utf8 chars should be stripped, if your database uses 4 byte utf8 characters this should be set to
+  false, most mysql databases use utf8mb3 which is why true is the default.
+- content.cleaner.filter.utf8.replacement = ""
+  - the replacement character to use if a surrogate is found, the default is to remove it.
+
+The following options are for adjusting the woodstox xml parser, generally nobody will ever need to adjust these but if
+you see an exception in the log then then you will need to decide how to fix the issue. Typically the assignment id
+is given in the log if it failed to convert you should consult the old tables and determine if the assignment is correct. 
+
+See the following [link](https://github.com/FasterXML/woodstox/blob/master/src/main/java/com/ctc/wstx/api/WstxInputProperties.java)
+for system environment variables used in configuring the woodstox xml library. One can add these as properties to sakai
+by appending the `@SystemProperty` to the environment variable.
+
+- com.ctc.wstx.maxAttributesPerElement@SystemProperty = 1000
+  - if you see the following exception `javax.xml.stream.XMLStreamException: Attribute limit (1000) exceeded`
+  you may need to increase this 
+- com.ctc.wstx.maxAttributeSize@SystemProperty =  524288
+  - if you see the following exception during the conversion `javax.xml.stream.XMLStreamException: Maximum attribute size limit (524288) exceeded`
+  you may need to increase this
+
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/RemoveDuplicateSubmissionsConversionHandler.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/RemoveDuplicateSubmissionsConversionHandler.java
similarity index 97%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/RemoveDuplicateSubmissionsConversionHandler.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/RemoveDuplicateSubmissionsConversionHandler.java
index 72bc03a8982..553765b8de5 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/RemoveDuplicateSubmissionsConversionHandler.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/RemoveDuplicateSubmissionsConversionHandler.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SAXSerializablePropertiesAccess.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SAXSerializablePropertiesAccess.java
similarity index 96%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SAXSerializablePropertiesAccess.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SAXSerializablePropertiesAccess.java
index 07e136223f2..89ec088937a 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SAXSerializablePropertiesAccess.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SAXSerializablePropertiesAccess.java
@@ -19,15 +19,13 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.util.HashMap;
 import java.util.Map;
-import java.util.Stack;
 
 import org.sakaiproject.entity.api.serialize.SerializableEntity;
 import org.sakaiproject.entity.api.serialize.SerializablePropertiesAccess;
-import org.w3c.dom.Element;
 
 /**
  * @author ieb
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/api/SerializableSubmissionAccess.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SerializableSubmissionAccess.java
similarity index 99%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/api/SerializableSubmissionAccess.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SerializableSubmissionAccess.java
index 8749bb5ba5e..65f19d91439 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/api/SerializableSubmissionAccess.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SerializableSubmissionAccess.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.impl.conversion.api;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.util.List;
 
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SubmitterIdAssignmentsConversionHandler.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SubmitterIdAssignmentsConversionHandler.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SubmitterIdAssignmentsConversionHandler.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SubmitterIdAssignmentsConversionHandler.java
index e1ac8639aee..d15c012fa97 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/SubmitterIdAssignmentsConversionHandler.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/SubmitterIdAssignmentsConversionHandler.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.impl.conversion.impl;
+package org.sakaiproject.assignment.impl.conversion;
 
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/Assignment12ConversionJob.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/Assignment12ConversionJob.java
deleted file mode 100644
index 17e57cb7fb3..00000000000
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/Assignment12ConversionJob.java
+++ /dev/null
@@ -1,24 +0,0 @@
-package org.sakaiproject.assignment.impl.conversion.impl;
-
-import lombok.Setter;
-import lombok.extern.slf4j.Slf4j;
-import org.quartz.Job;
-import org.quartz.JobExecutionContext;
-import org.quartz.JobExecutionException;
-import org.sakaiproject.assignment.api.conversion.AssignmentConversionService;
-
-@Slf4j
-public class Assignment12ConversionJob implements Job {
-
-    @Setter
-    private AssignmentConversionService assignmentConversionService;
-
-    @Override
-    public void execute(JobExecutionContext context) throws JobExecutionException {
-        log.info("<===== Assignment migration start =====>");
-
-        assignmentConversionService.runConversion();
-
-        log.info("<===== Assignment migration end =====>");
-    }
-}
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/upgradeschema.config b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/upgradeschema.config
similarity index 93%
rename from assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/upgradeschema.config
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/upgradeschema.config
index 6debc44e7c7..672091113b8 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/impl/upgradeschema.config
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/conversion/upgradeschema.config
@@ -1,7 +1,7 @@
 # UpgradeSchema Control File (Default)
 
 convert.0=SubmitterIdAssignmentsConversion
-convert.0.handler.class=org.sakaiproject.assignment.impl.conversion.impl.SubmitterIdAssignmentsConversionHandler
+convert.0.handler.class=SubmitterIdAssignmentsConversionHandler
 convert.0.new.columns.names=SUBMITTER_ID,SUBMIT_TIME,SUBMITTED,GRADED,KEEP
 convert.0.new.columns.types=VARCHAR(99),VARCHAR(99),VARCHAR(6),VARCHAR(6),VARCHAR(1) 
 convert.0.new.columns.qualifiers=default null,default null,default null,default null,default 'X'   
@@ -19,7 +19,7 @@ convert.0.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.0.update.record=update ASSIGNMENT_SUBMISSION set SUBMITTER_ID = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ? where SUBMISSION_ID = ? 
 
 convert.1=DuplicateSubmissionAssignmentsConversion
-convert.1.handler.class=org.sakaiproject.assignment.impl.conversion.impl.CombineDuplicateSubmissionsConversionHandler
+convert.1.handler.class=CombineDuplicateSubmissionsConversionHandler
 convert.1.create.migrate.table=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99), index assn_dupes_fsregister_id_idx (id), index assn_dupes_fsregister_status_idx (status)) 
 convert.1.drop.migrate.table=drop table assn_dupes_fsregister
 convert.1.check.migrate.table=select count(*) from assn_dupes_fsregister where status <> 'done'
@@ -32,7 +32,7 @@ convert.1.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.1.update.record=update ASSIGNMENT_SUBMISSION set XML = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ?, KEEP = 'T' where SUBMISSION_ID = ? 
 
 convert.2=RemoveDuplicateSubmissionAssignmentsConversion
-convert.2.handler.class=org.sakaiproject.assignment.impl.conversion.impl.RemoveDuplicateSubmissionsConversionHandler
+convert.2.handler.class=RemoveDuplicateSubmissionsConversionHandler
 convert.2.create.migrate.table=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99), index assn_dupes_fsregister_id_idx (id), index assn_dupes_fsregister_status_idx (status)) 
 convert.2.drop.migrate.table.count=7
 convert.2.drop.migrate.table.0=drop table assn_dupes_fsregister
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/persistence/AssignmentRepositoryImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/persistence/AssignmentRepositoryImpl.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/persistence/AssignmentRepositoryImpl.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/persistence/AssignmentRepositoryImpl.java
index 9493fb4d18d..46511206bcc 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/persistence/AssignmentRepositoryImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/persistence/AssignmentRepositoryImpl.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.sakaiproject.assignment.persistence;
+package org.sakaiproject.assignment.impl.persistence;
 
 import java.time.Instant;
 import java.util.List;
@@ -27,6 +27,7 @@
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.model.AssignmentSubmission;
 import org.sakaiproject.assignment.api.model.AssignmentSubmissionSubmitter;
+import org.sakaiproject.assignment.api.persistence.AssignmentRepository;
 import org.sakaiproject.serialization.BasicSerializableRepository;
 import org.springframework.transaction.annotation.Transactional;
 
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityImpl.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityImpl.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityImpl.java
index 98eae6f17dc..a4a6f01a8c1 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityImpl.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.taggable.impl;
+package org.sakaiproject.assignment.impl.taggable;
 
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.entity.api.Entity;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityProducerImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityProducerImpl.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityProducerImpl.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityProducerImpl.java
index e765659b735..9623f0b8bd7 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentActivityProducerImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentActivityProducerImpl.java
@@ -19,7 +19,7 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.taggable.impl;
+package org.sakaiproject.assignment.impl.taggable;
 
 import java.util.ArrayList;
 import java.util.Collection;
@@ -32,7 +32,7 @@
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.AssignmentService;
 import org.sakaiproject.assignment.api.model.AssignmentSubmission;
-import org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer;
+import org.sakaiproject.assignment.api.taggable.AssignmentActivityProducer;
 import org.sakaiproject.component.api.ServerConfigurationService;
 import org.sakaiproject.taggable.api.TaggableActivity;
 import org.sakaiproject.taggable.api.TaggableItem;
diff --git a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentItemImpl.java b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentItemImpl.java
similarity index 98%
rename from assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentItemImpl.java
rename to assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentItemImpl.java
index 6f8abb69539..c6d20f50468 100644
--- a/assignment/impl/src/java/org/sakaiproject/assignment/taggable/impl/AssignmentItemImpl.java
+++ b/assignment/impl/src/java/org/sakaiproject/assignment/impl/taggable/AssignmentItemImpl.java
@@ -19,12 +19,11 @@
  *
  **********************************************************************************/
 
-package org.sakaiproject.assignment.taggable.impl;
+package org.sakaiproject.assignment.impl.taggable;
 
 import java.util.Date;
 import java.util.Set;
 
-import org.sakaiproject.assignment.api.AssignmentEntity;
 import org.sakaiproject.assignment.api.AssignmentService;
 import org.sakaiproject.assignment.api.model.AssignmentSubmissionSubmitter;
 import org.sakaiproject.user.api.UserDirectoryService;
diff --git a/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentConversionTest.java b/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentConversionTest.java
index 2b4a5b6a9af..9c013619a4f 100644
--- a/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentConversionTest.java
+++ b/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentConversionTest.java
@@ -33,11 +33,11 @@
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.model.AssignmentSubmission;
 import org.sakaiproject.assignment.api.model.AssignmentSubmissionSubmitter;
-import org.sakaiproject.assignment.impl.conversion.impl.AssignmentConversionServiceImpl;
-import org.sakaiproject.assignment.impl.conversion.impl.O11Assignment;
-import org.sakaiproject.assignment.impl.conversion.impl.O11AssignmentContent;
-import org.sakaiproject.assignment.impl.conversion.impl.O11Submission;
-import org.sakaiproject.assignment.persistence.AssignmentRepository;
+import org.sakaiproject.assignment.impl.conversion.AssignmentConversionServiceImpl;
+import org.sakaiproject.assignment.impl.conversion.O11Assignment;
+import org.sakaiproject.assignment.impl.conversion.O11AssignmentContent;
+import org.sakaiproject.assignment.impl.conversion.O11Submission;
+import org.sakaiproject.assignment.api.persistence.AssignmentRepository;
 import org.sakaiproject.component.api.ServerConfigurationService;
 import org.sakaiproject.hibernate.AssignableUUIDGenerator;
 import org.springframework.beans.factory.annotation.Autowired;
diff --git a/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentTestConfiguration.java b/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentTestConfiguration.java
index 55b4bb9ec4e..3e2689ed642 100644
--- a/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentTestConfiguration.java
+++ b/assignment/impl/src/test/org/sakaiproject/assignment/impl/AssignmentTestConfiguration.java
@@ -29,7 +29,7 @@
 import org.sakaiproject.announcement.api.AnnouncementService;
 import org.sakaiproject.api.app.scheduler.ScheduledInvocationManager;
 import org.sakaiproject.api.app.scheduler.SchedulerManager;
-import org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer;
+import org.sakaiproject.assignment.api.taggable.AssignmentActivityProducer;
 import org.sakaiproject.authz.api.AuthzGroupService;
 import org.sakaiproject.authz.api.FunctionManager;
 import org.sakaiproject.authz.api.SecurityService;
@@ -146,7 +146,7 @@ public AnnouncementService announcementService() {
         return mock(AnnouncementService.class);
     }
 
-    @Bean(name = "org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer")
+    @Bean(name = "org.sakaiproject.assignment.api.taggable.AssignmentActivityProducer")
     public AssignmentActivityProducer assignmentActivityProducer() {
         return mock(AssignmentActivityProducer.class);
     }
diff --git a/assignment/impl/src/webapp/WEB-INF/components.xml b/assignment/impl/src/webapp/WEB-INF/components.xml
index e6a6885d2e1..e3895c0391d 100644
--- a/assignment/impl/src/webapp/WEB-INF/components.xml
+++ b/assignment/impl/src/webapp/WEB-INF/components.xml
@@ -86,7 +86,7 @@
     </bean>
 
     <bean id="org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer"
-          class="org.sakaiproject.assignment.taggable.impl.AssignmentActivityProducerImpl"
+          class="org.sakaiproject.assignment.impl.taggable.AssignmentActivityProducerImpl"
           init-method="init">
         <property name="assignmentService" ref="org.sakaiproject.assignment.api.AssignmentService"/>
         <property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager"/>
@@ -120,7 +120,7 @@
     </bean>
 
     <bean id="org.sakaiproject.assignment.persistence.AssignmentRepository"
-          class="org.sakaiproject.assignment.persistence.AssignmentRepositoryImpl">
+          class="org.sakaiproject.assignment.impl.persistence.AssignmentRepositoryImpl">
         <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
     </bean>
 
@@ -176,7 +176,7 @@
     </bean>
 
     <bean id="org.sakaiproject.assignment.impl.conversion.api.AssignmentConversionService"
-          class="org.sakaiproject.assignment.impl.conversion.impl.AssignmentConversionServiceImpl"
+          class="org.sakaiproject.assignment.impl.conversion.AssignmentConversionServiceImpl"
           init-method="init">
         <property name="assignmentRepository" ref="org.sakaiproject.assignment.persistence.AssignmentRepository"/>
         <property name="dataProvider" ref="org.sakaiproject.assignment.api.conversion.AssignmentDataProvider"/>
@@ -184,19 +184,19 @@
     </bean>
 
     <bean id="org.sakaiproject.assignment.api.conversion.AssignmentDataProvider"
-          class="org.sakaiproject.assignment.impl.conversion.impl.AssignmentDataProvider11">
+          class="org.sakaiproject.assignment.impl.conversion.AssignmentDataProvider11">
         <property name="sessionFactory" ref="org.sakaiproject.springframework.orm.hibernate.GlobalSessionFactory"/>
     </bean>
 
     <bean id="org.sakaiproject.assignment.impl.conversion.impl.Assignment12ConversionJob"
-          class="org.sakaiproject.assignment.impl.conversion.impl.Assignment12ConversionJob">
+          class="org.sakaiproject.assignment.impl.conversion.Assignment12ConversionJob">
         <property name="assignmentConversionService" ref="org.sakaiproject.assignment.impl.conversion.api.AssignmentConversionService"/>
     </bean>
 
     <bean id="org.sakaiproject.assignment.impl.conversion.impl.Assignment12ConversionJob.jobWrapper"
           class="org.sakaiproject.component.app.scheduler.jobs.SpringJobBeanWrapper"
           init-method="init">
-        <property name="beanId" value="org.sakaiproject.assignment.impl.conversion.impl.Assignment12ConversionJob"/>
+        <property name="beanId" value="org.sakaiproject.assignment.impl.conversion.Assignment12ConversionJob"/>
         <property name="jobName" value="Assignment 12 Conversion"/>
         <property name="schedulerManager" ref="org.sakaiproject.api.app.scheduler.SchedulerManager"/>
     </bean>
diff --git a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
index 8b4f873dd96..37a1438afce 100644
--- a/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
+++ b/assignment/tool/src/java/org/sakaiproject/assignment/tool/AssignmentAction.java
@@ -50,7 +50,7 @@
 import org.sakaiproject.assignment.api.*;
 import org.sakaiproject.assignment.api.model.Assignment;
 import org.sakaiproject.assignment.api.model.*;
-import org.sakaiproject.assignment.taggable.api.AssignmentActivityProducer;
+import org.sakaiproject.assignment.api.taggable.AssignmentActivityProducer;
 import org.sakaiproject.assignment.taggable.tool.DecoratedTaggingProvider;
 import org.sakaiproject.assignment.taggable.tool.DecoratedTaggingProvider.Pager;
 import org.sakaiproject.assignment.taggable.tool.DecoratedTaggingProvider.Sort;
@@ -5505,7 +5505,7 @@ public void doSave_toggle_remove_review(RunData data) {
                     assignmentPeerAssessmentService.savePeerAssessmentItem(item);
                     if (item.getScore() != null) {
                         //item was part of the calculation, re-calculate
-                        boolean saved = assignmentPeerAssessmentService.updateScore(submissionId);
+                        boolean saved = assignmentPeerAssessmentService.updateScore(submissionId, peerAssessor);
                         if (saved) {
                             //we need to make sure the GB is updated correctly (or removed)
                             String assignmentId = item.getAssignmentId();
@@ -10500,7 +10500,7 @@ public boolean saveReviewGradeForm(RunData data, SessionState state, String grad
                             assignmentPeerAssessmentService.savePeerAssessmentItem(item);
                             if (scoreChanged) {
                                 //need to re-calcuate the overall score:
-                                boolean saved = assignmentPeerAssessmentService.updateScore(submissionId);
+                                boolean saved = assignmentPeerAssessmentService.updateScore(submissionId, assessorUserId);
                                 if (saved) {
                                     //we need to make sure the GB is updated correctly (or removed)
                                     String assignmentId = (String) state.getAttribute(VIEW_ASSIGNMENT_ID);
diff --git a/assignment/upgradeschema_mysql.config b/assignment/upgradeschema_mysql.config
index 702ca99d1b9..95829212886 100644
--- a/assignment/upgradeschema_mysql.config
+++ b/assignment/upgradeschema_mysql.config
@@ -1,7 +1,7 @@
 # UpgradeSchema Control File (Default)
 
 convert.0=SubmitterIdAssignmentsConversion
-convert.0.handler.class=org.sakaiproject.assignment.impl.conversion.impl.SubmitterIdAssignmentsConversionHandler
+convert.0.handler.class=org.sakaiproject.assignment.impl.conversion.SubmitterIdAssignmentsConversionHandler
 convert.0.new.columns.names=SUBMITTER_ID,SUBMIT_TIME,SUBMITTED,GRADED,KEEP
 convert.0.new.columns.types=VARCHAR(99),VARCHAR(99),VARCHAR(6),VARCHAR(6),VARCHAR(1) 
 convert.0.new.columns.qualifiers=default null,default null,default null,default null,default 'X'   
@@ -19,7 +19,7 @@ convert.0.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.0.update.record=update ASSIGNMENT_SUBMISSION set SUBMITTER_ID = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ? where SUBMISSION_ID = ? 
 
 convert.1=DuplicateSubmissionAssignmentsConversion
-convert.1.handler.class=org.sakaiproject.assignment.impl.conversion.impl.CombineDuplicateSubmissionsConversionHandler
+convert.1.handler.class=org.sakaiproject.assignment.impl.conversion.CombineDuplicateSubmissionsConversionHandler
 convert.1.create.migrate.table=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99), index assn_dupes_fsregister_id_idx (id), index assn_dupes_fsregister_status_idx (status)) 
 convert.1.drop.migrate.table=drop table assn_dupes_fsregister
 convert.1.check.migrate.table=select count(*) from assn_dupes_fsregister where status <> 'done'
@@ -32,7 +32,7 @@ convert.1.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.1.update.record=update ASSIGNMENT_SUBMISSION set XML = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ?, KEEP = 'T' where SUBMISSION_ID = ? 
 
 convert.2=RemoveDuplicateSubmissionAssignmentsConversion
-convert.2.handler.class=org.sakaiproject.assignment.impl.conversion.impl.RemoveDuplicateSubmissionsConversionHandler
+convert.2.handler.class=org.sakaiproject.assignment.impl.conversion.RemoveDuplicateSubmissionsConversionHandler
 convert.2.create.migrate.table=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99), index assn_dupes_fsregister_id_idx (id), index assn_dupes_fsregister_status_idx (status)) 
 convert.2.drop.migrate.table.count=7
 convert.2.drop.migrate.table.0=drop table assn_dupes_fsregister
diff --git a/assignment/upgradeschema_oracle.config b/assignment/upgradeschema_oracle.config
index f87db61ccc8..817cececc75 100644
--- a/assignment/upgradeschema_oracle.config
+++ b/assignment/upgradeschema_oracle.config
@@ -1,7 +1,7 @@
 # UpgradeSchema Control File (Default)
 
 convert.0=SubmitterIdAssignmentsConversion
-convert.0.handler.class=org.sakaiproject.assignment.impl.conversion.impl.SubmitterIdAssignmentsConversionHandler
+convert.0.handler.class=org.sakaiproject.assignment.impl.conversion.SubmitterIdAssignmentsConversionHandler
 convert.0.new.columns.names=SUBMITTER_ID,SUBMIT_TIME,SUBMITTED,GRADED,KEEP
 convert.0.new.columns.types=VARCHAR(99),VARCHAR(99),VARCHAR(6),VARCHAR(6),VARCHAR(1) 
 convert.0.new.columns.qualifiers=default null,default null,default null,default null,default 'X'   
@@ -22,7 +22,7 @@ convert.0.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.0.update.record=update ASSIGNMENT_SUBMISSION set SUBMITTER_ID = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ? where SUBMISSION_ID = ? 
 
 convert.1=DuplicateSubmissionAssignmentsConversion
-convert.1.handler.class=org.sakaiproject.assignment.impl.conversion.impl.CombineDuplicateSubmissionsConversionHandler
+convert.1.handler.class=org.sakaiproject.assignment.impl.conversion.CombineDuplicateSubmissionsConversionHandler
 convert.1.create.migrate.table.count=3
 convert.1.create.migrate.table.0=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99))
 convert.1.create.migrate.table.1=create unique index uk_assn_dupes_fsregister on assn_dupes_fsregister(id)
@@ -38,7 +38,7 @@ convert.1.select.validate.record=select XML from ASSIGNMENT_SUBMISSION where SUB
 convert.1.update.record=update ASSIGNMENT_SUBMISSION set XML = ?, SUBMIT_TIME = ?, SUBMITTED = ?, GRADED = ?, KEEP = 'T' where SUBMISSION_ID = ? 
 
 convert.2=RemoveDuplicateSubmissionAssignmentsConversion
-convert.2.handler.class=org.sakaiproject.assignment.impl.conversion.impl.RemoveDuplicateSubmissionsConversionHandler
+convert.2.handler.class=org.sakaiproject.assignment.impl.conversion.RemoveDuplicateSubmissionsConversionHandler
 convert.2.create.migrate.table.count=3
 convert.2.create.migrate.table.0=create table assn_dupes_fsregister (id VARCHAR(99), STATUS VARCHAR(99))
 convert.2.create.migrate.table.1=create unique index uk_assn_dupes_fsregister on assn_dupes_fsregister(id)
